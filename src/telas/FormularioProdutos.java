/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package telas;

import DAO.GenericController;
import Model.Fornecedor;
import Model.Produto;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author leidetila
 */
public class FormularioProdutos extends javax.swing.JPanel {

    private Produto produto;

    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * Creates new form FormularioProdutos
     */
    public FormularioProdutos() {
        initComponents();
        actualizarTabela();
        hint();
        idioma();

        comboboxFornecedores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        lbNome = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        tfQuantidade = new javax.swing.JTextField();
        tfFornecedor = new javax.swing.JTextField();
        lbQuantidade = new javax.swing.JLabel();
        lbFornecedor = new javax.swing.JLabel();
        tfCategoria = new javax.swing.JComboBox<>();
        btnAdicionar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        lbCategoria = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        dataVencimento = new javax.swing.JFormattedTextField();
        lbData = new javax.swing.JLabel();
        lbPreco = new javax.swing.JLabel();
        tfPreco = new javax.swing.JTextField();
        btIdioma = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfClassificacao = new javax.swing.JComboBox<>();
        cbFornecedores = new javax.swing.JComboBox<>();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Telefone", "Morada"
            }
        ));
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        lbNome.setText("Nome");

        tfNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfNomeKeyPressed(evt);
            }
        });

        tfQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfQuantidadeActionPerformed(evt);
            }
        });
        tfQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfQuantidadeKeyPressed(evt);
            }
        });

        tfFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFornecedorActionPerformed(evt);
            }
        });

        lbQuantidade.setText("Quantidade");

        lbFornecedor.setText("Fornecedor");

        tfCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Medicação com prescrição", "Medicamentos de Venda Livre" }));
        tfCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCategoriaActionPerformed(evt);
            }
        });

        btnAdicionar.setBackground(new java.awt.Color(0, 153, 255));
        btnAdicionar.setForeground(new java.awt.Color(255, 255, 255));
        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnEditar.setBackground(new java.awt.Color(255, 102, 0));
        btnEditar.setForeground(new java.awt.Color(255, 255, 255));
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        lbCategoria.setText("Categoria");

        btnEliminar.setBackground(new java.awt.Color(255, 0, 0));
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
        });
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        dataVencimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataVencimentoActionPerformed(evt);
            }
        });
        dataVencimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dataVencimentoKeyPressed(evt);
            }
        });

        lbData.setText("Data Vencimento");

        lbPreco.setText("Preço");

        tfPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPrecoActionPerformed(evt);
            }
        });
        tfPreco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfPrecoKeyPressed(evt);
            }
        });

        btIdioma.setBackground(new java.awt.Color(0, 153, 0));
        btIdioma.setText("Mudar Idioma");
        btIdioma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIdiomaActionPerformed(evt);
            }
        });

        jLabel1.setText("Classificacao");

        tfClassificacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Analgesicos", "Antibioticos", "Antivirais ", "Anti-inflamatórios ", "Anti-depressivos ", "Anti-hipertensivos" }));
        tfClassificacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfClassificacaoActionPerformed(evt);
            }
        });

        cbFornecedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFornecedoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNome, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbData)
                    .addComponent(lbPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tfFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(tfPreco)
                    .addComponent(tfNome)
                    .addComponent(tfQuantidade, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dataVencimento))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(136, 136, 136))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(tfCategoria, javax.swing.GroupLayout.Alignment.LEADING, 0, 1, Short.MAX_VALUE)
                                .addComponent(tfClassificacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbFornecedores, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(21, 21, 21)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbCategoria)
                        .addGap(153, 153, 153)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btIdioma, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(117, 117, 117))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNome)
                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar)
                    .addComponent(lbCategoria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbQuantidade))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEliminar)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(btnEditar))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfClassificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btIdioma))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbFornecedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lbFornecedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbPreco)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        // TODO add your handling code here:
        System.out.println("clicado");
        long id = (long) tabela.getValueAt(tabela.getSelectedRow(), 0);

        produto = (Produto) new GenericController().buscaId(Produto.class, id);

        tfNome.setText(produto.getNome());
        tfQuantidade.setText(String.valueOf(produto.getQuantidade()));
        //tfFornecedor.setText(produto.getFornecedor());
        tfCategoria.setSelectedItem(produto.getCategoria());
        tfPreco.setText(produto.getPreco() + "");
    }//GEN-LAST:event_tabelaMouseClicked

    private void tfQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfQuantidadeActionPerformed

    private void tfCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCategoriaActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
//        Produto produto = new Produto();
        try {
            Date dataVencimentoVar = formato.parse(dataVencimento.getText());
            System.out.println("Data convertida: " + dataVencimentoVar);
            produto.setDataDeVencimento(dataVencimentoVar);
        } catch (ParseException e) {
            System.out.println("Erro ao converter a data: " + e.getMessage());
        }

        produto.setNome(tfNome.getText());
        produto.setDataDeEntrada(new Date());
        produto.setFornecedor((Fornecedor) cbFornecedores.getSelectedItem());
        produto.setCategoria(tfCategoria.getSelectedItem().toString());
        produto.setClassificacao(tfClassificacao.getSelectedItem().toString());
        produto.setQuantidade(Integer.parseInt(tfQuantidade.getText()));
        produto.setPreco(Double.parseDouble(tfPreco.getText()));

        new GenericController().atualizarPorId(Produto.class, produto.getId(), produto);

        actualizarTabela();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // TODO add your handling code here:
        Produto produto = new Produto();
        try {
            Date dataVencimentoVar = formato.parse(dataVencimento.getText());
            System.out.println("Data convertida: " + dataVencimentoVar);
            produto.setDataDeVencimento(dataVencimentoVar);
        } catch (ParseException e) {
            System.out.println("Erro ao converter a data: " + e.getMessage());
        }

        produto.setNome(tfNome.getText());
        produto.setDataDeEntrada(new Date());
        // produto.setDataDeVencimento(new Date());
        produto.setFornecedor((Fornecedor) cbFornecedores.getSelectedItem());
        produto.setCategoria(tfCategoria.getSelectedItem().toString());
        produto.setClassificacao(tfClassificacao.getSelectedItem().toString());
        produto.setQuantidade(Integer.parseInt(tfQuantidade.getText()));
        produto.setPreco(Double.parseDouble(tfPreco.getText()));

        new GenericController().add(produto);

        actualizarTabela();
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void tfFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFornecedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfFornecedorActionPerformed

    private void dataVencimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataVencimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataVencimentoActionPerformed

    private void tfPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPrecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPrecoActionPerformed

    private void btIdiomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIdiomaActionPerformed
        // TODO add your handling code here:
        idioma();
    }//GEN-LAST:event_btIdiomaActionPerformed

    private void tfQuantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfQuantidadeKeyPressed
        // TODO add your handling code here:
        Validacao.permitirApenasNumero(evt, tfQuantidade);
    }//GEN-LAST:event_tfQuantidadeKeyPressed

    private void tfNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNomeKeyPressed
        // TODO add your handling code here:
        Validacao.naoAceitarNumeros(evt, tfNome);
    }//GEN-LAST:event_tfNomeKeyPressed

    private void tfPrecoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPrecoKeyPressed
        // TODO add your handling code here:
        Validacao.permitirApenasNumero(evt, tfPreco);
    }//GEN-LAST:event_tfPrecoKeyPressed

    private void dataVencimentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataVencimentoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataVencimentoKeyPressed

    private void tfClassificacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfClassificacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfClassificacaoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        new GenericController().removeFisico(Produto.class, produto.getId());
        actualizarTabela();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarMouseClicked

    private void cbFornecedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFornecedoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFornecedoresActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btIdioma;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<String> cbFornecedores;
    private javax.swing.JFormattedTextField dataVencimento;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCategoria;
    private javax.swing.JLabel lbData;
    private javax.swing.JLabel lbFornecedor;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbPreco;
    private javax.swing.JLabel lbQuantidade;
    private javax.swing.JTable tabela;
    private javax.swing.JComboBox<String> tfCategoria;
    private javax.swing.JComboBox<String> tfClassificacao;
    private javax.swing.JTextField tfFornecedor;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfPreco;
    private javax.swing.JTextField tfQuantidade;
    // End of variables declaration//GEN-END:variables
  private void actualizarTabela() {

        List<Produto> lista = (List<Produto>) new GenericController().listar(Produto.class);

        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        model.setColumnIdentifiers(new String[]{
            "ID", "Nome", "Categoria", "Classificaçao", "Fornecedor", "Quantidade", "Preço", "Data Entrada", "Data Vencimento"
        });
        model.setRowCount(0);

        // Adiciona cada cliente na tabela usando um loop 'for' tradicional
        for (Produto produto : lista) {
            model.addRow(new Object[]{
                produto.getId(), // ID do cliente
                produto.getNome(), // Nome do cliente
                produto.getCategoria(),
                produto.getClassificacao(),
                produto.getFornecedor(), // Morada do cliente (endereço)
                produto.getQuantidade(), // Telefone do cliente
                produto.getPreco(),
                produto.getDataDeEntrada(),
                produto.getDataDeVencimento(),});
        }

        tabela.setModel(model);

    }

    private void hint() {
        Validacao.setarHint(tfNome, "ex: Paracetamol");
        Validacao.setarHint(tfFornecedor, "ex: Azevedos");
        Validacao.setarHint(tfQuantidade, "ex: 1000000");
        Validacao.setarHint(tfPreco, "ex: 500000");

    }

    private void idioma() {
        Validacao.setarLinguaLabel(lbNome, "Nome", "Name");
        Validacao.setarLinguaLabel(lbData, "Data", "Date");
        Validacao.setarLinguaLabel(lbFornecedor, "Fornecedor", "Gender");
        Validacao.setarLinguaLabel(lbPreco, "Preco", "Price");
        Validacao.setarLinguaLabel(lbQuantidade, "Quantidade", "Quantitity");
    }

    private void comboboxFornecedores() {
        List<Fornecedor> lista = (List<Fornecedor>) new GenericController().listar(Fornecedor.class);
        for (Fornecedor fornecedor : lista) {
            cbFornecedores.addItem(fornecedor.toString());
        }

    }

}
